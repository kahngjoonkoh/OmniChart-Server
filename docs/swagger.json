{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/v1/events/{ticker}": {
            "get": {
                "summary": "Gets events for a given ticker and timeframe",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Ticker symbol",
                        "name": "ticker",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Start time in RFC3339 format",
                        "name": "from",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End time in RFC3339 format",
                        "name": "to",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Maximum number of events to return",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Event"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Sign up a new user account",
                "parameters": [
                    {
                        "description": "Signup data",
                        "name": "signup",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.UserInfo"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Event": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "event_type_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "source_url": {
                    "type": "string"
                },
                "timestamp": {
                    "description": "Use timestamptz in Postgres",
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.UserInfo": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string"
                }
            }
        }
    }
}